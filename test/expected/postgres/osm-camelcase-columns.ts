/* tslint:disable */

export type FormatEnum = 'html' | 'markdown' | 'text';
export type UserStatusEnum = 'active' | 'confirmed' | 'deleted' | 'pending' | 'suspended';

export namespace usersFields {
    export type email = string;
    export type id = number;
    export type passCrypt = string;
    export type creationTime = Date;
    export type displayName = string;
    export type dataPublic = boolean;
    export type description = string;
    export type homeLat = number | null;
    export type homeLon = number | null;
    export type homeZoom = number | null;
    export type nearby = number | null;
    export type passSalt = string | null;
    export type imageFileName = string | null;
    export type emailValid = boolean;
    export type newEmail = string | null;
    export type creationIp = string | null;
    export type languages = string | null;
    export type status = UserStatusEnum;
    export type termsAgreed = Date | null;
    export type considerPd = boolean;
    export type preferredEditor = string | null;
    export type termsSeen = boolean;
    export type authUid = string | null;
    export type descriptionFormat = FormatEnum;
    export type imageFingerprint = string | null;
    export type changesetsCount = number;
    export type tracesCount = number;
    export type diaryEntriesCount = number;
    export type imageUseGravatar = boolean;
    export type imageContentType = string | null;
    export type authProvider = string | null;
    export type uuidColumn = string | null;
    export type number_ = number | null;
    export type string_ = string | null;
    export type moneyCol = number | null;
    export type charCol = string | null;
    export type timeCol = string | null;
    export type inetCol = string | null;
    export type jsonbCol = Object | null;
    export type numericCol = number | null;
    export type byteaCol = string | null;
    export type boolArrayCol = Array<boolean> | null;
    export type varcharArrayCol = Array<string> | null;
    export type int2ArrayCol = Array<number> | null;
    export type int4ArrayCol = Array<number> | null;
    export type int8ArrayCol = Array<number> | null;
    export type uuidArrayCol = Array<string> | null;
    export type textArrayCol = Array<string> | null;
    export type byteaArrayCol = Array<string> | null;
    export type realCol = number | null;
    export type doubleCol = number | null;
    export type timeWithTz = string | null;
    export type oidCol = number | null;
    export type intervalCol = string | null;
    export type jsonCol = Object | null;
    export type dateCol = Date | null;
    export type unspportedPathType = any | null;
    export type nameTypeCol = string | null;
    export type jsonArrayCol = Array<Object> | null;
    export type jsonbArrayCol = Array<Object> | null;
    export type timestamptzArrayCol = Array<Date> | null;

}

export interface Users {
    email: usersFields.email;
    id: usersFields.id;
    passCrypt: usersFields.passCrypt;
    creationTime: usersFields.creationTime;
    displayName: usersFields.displayName;
    dataPublic: usersFields.dataPublic;
    description: usersFields.description;
    homeLat: usersFields.homeLat;
    homeLon: usersFields.homeLon;
    homeZoom: usersFields.homeZoom;
    nearby: usersFields.nearby;
    passSalt: usersFields.passSalt;
    imageFileName: usersFields.imageFileName;
    emailValid: usersFields.emailValid;
    newEmail: usersFields.newEmail;
    creationIp: usersFields.creationIp;
    languages: usersFields.languages;
    status: usersFields.status;
    termsAgreed: usersFields.termsAgreed;
    considerPd: usersFields.considerPd;
    preferredEditor: usersFields.preferredEditor;
    termsSeen: usersFields.termsSeen;
    authUid: usersFields.authUid;
    descriptionFormat: usersFields.descriptionFormat;
    imageFingerprint: usersFields.imageFingerprint;
    changesetsCount: usersFields.changesetsCount;
    tracesCount: usersFields.tracesCount;
    diaryEntriesCount: usersFields.diaryEntriesCount;
    imageUseGravatar: usersFields.imageUseGravatar;
    imageContentType: usersFields.imageContentType;
    authProvider: usersFields.authProvider;
    uuidColumn: usersFields.uuidColumn;
    number: usersFields.number_;
    string: usersFields.string_;
    moneyCol: usersFields.moneyCol;
    charCol: usersFields.charCol;
    timeCol: usersFields.timeCol;
    inetCol: usersFields.inetCol;
    jsonbCol: usersFields.jsonbCol;
    numericCol: usersFields.numericCol;
    byteaCol: usersFields.byteaCol;
    boolArrayCol: usersFields.boolArrayCol;
    varcharArrayCol: usersFields.varcharArrayCol;
    int2ArrayCol: usersFields.int2ArrayCol;
    int4ArrayCol: usersFields.int4ArrayCol;
    int8ArrayCol: usersFields.int8ArrayCol;
    uuidArrayCol: usersFields.uuidArrayCol;
    textArrayCol: usersFields.textArrayCol;
    byteaArrayCol: usersFields.byteaArrayCol;
    realCol: usersFields.realCol;
    doubleCol: usersFields.doubleCol;
    timeWithTz: usersFields.timeWithTz;
    oidCol: usersFields.oidCol;
    intervalCol: usersFields.intervalCol;
    jsonCol: usersFields.jsonCol;
    dateCol: usersFields.dateCol;
    unspportedPathType: usersFields.unspportedPathType;
    nameTypeCol: usersFields.nameTypeCol;
    jsonArrayCol: usersFields.jsonArrayCol;
    jsonbArrayCol: usersFields.jsonbArrayCol;
    timestamptzArrayCol: usersFields.timestamptzArrayCol;

}
